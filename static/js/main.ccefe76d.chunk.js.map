{"version":3,"sources":["components/Business/Business.js","components/App/logo.svg","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Business","business","this","props","className","src","imageSrc","alt","address","city","state","zipCode","category","reviewCount","React","Component","BusinessList","businesses","map","id","SearchBar","term","location","sortBy","handleTermChange","bind","handleLocationChange","handleSearch","sortByOption","setState","event","target","value","searchYelp","preventDefault","Object","keys","sortByOptions","sortByOptionValue","getSortByClass","handleSortByChange","renderSortByOptions","placeholder","onChange","onClick","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","console","log","image_url","name","address1","zip_code","categories","title","rating","review_count","App","a","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccefe76d.chunk.js","sourcesContent":[" import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport './Business.css';\r\n\r\n  class Business extends React.Component {\r\n    \r\n    render(){\r\n        const {business} = this.props;\r\n        return(\r\n            <div className=\"Business\">\r\n            <div className=\"image-container\">\r\n                <img src={business.imageSrc} alt=''/>\r\n            </div>\r\n            <h2>MarginOtto Pizzeria</h2>\r\n            <div className=\"Business-information\">\r\n                <div className=\"Business-address\">\r\n                <p>{business.address}</p>\r\n                <p>{business.city}</p>\r\n                <p>{business.state} {business.zipCode}</p>\r\n                </div>\r\n                <div className=\"Business-reviews\">\r\n                <h3>{business.category}</h3>\r\n                <h3 className=\"rating\">4.5 stars</h3>\r\n                <p>{business.reviewCount} reviews</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n  };\r\n\r\n  export default Business;\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"BusinessList\">\r\n               { this.props.businesses.map((business) => {\r\n                    return <Business business={business} key={business.id}/>;//where is the id comes?\r\n               })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default BusinessList;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst sortByOptions = {\r\n    'Best Match': 'best match',\r\n    'Highest Rated': 'highest rated',\r\n    'Most Reviewed': 'most reviewed'\r\n}\r\n//term will refer to the search term located in the search input, location will refer to the location to search near from the location input, and sortBy will represent the selected sorting option to use.\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            term:'',\r\n            location:'',\r\n            sortBy:'best_match'\r\n            \r\n        };\r\n\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.handleLocationChange = this.handleLocationChange.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        /*this.sortByOptions = {\r\n            'Best Match': 'best match',\r\n            'Highest Rated': 'highest rated',\r\n            'Most Reviewed': 'most reviewed' \r\n        };*/\r\n\r\n    };\r\n\r\n    //This method will prove useful in providing visual feedback to users of Ravenous.\r\n    getSortByClass(sortByOption) {\r\n        if(this.sortBy===sortByOption){\r\n            return 'active';\r\n        }\r\n        else{\r\n            return '';\r\n        }\r\n    }\r\n\r\n    //This method will be useful when communicating with the Yelp API in the future.\r\n    handleSortByChange(sortByOption) {\r\n        this.setState({sortBy : sortByOption});\r\n    }\r\n\r\n    handleTermChange(event){\r\n        this.setState({term: event.target.value});\r\n    }\r\n\r\n    handleLocationChange(event){\r\n        this.setState({location: event.target.value});\r\n    }\r\n\r\n    handleSearch(event){\r\n        this.props.searchYelp(this.state.term,this.state.location,this.state.sortBy);\r\n        event.preventDefault();\r\n    }\r\n    //  The method should iterate through the keys and values of the sortByOptions object and return a list item.\r\n    renderSortByOptions() {\r\n        return Object.keys(this.sortByOptions).map(sortByOption => {\r\n            let sortByOptionValue = this.sortByOptions[sortByOption];\r\n            <li className = {this.getSortByClass(sortByOptionValue)} key={sortByOptionValue} onClick={this.handleSortByChange.bind(this,sortByOptionValue)} >{sortByOption}</li>\r\n\r\n        }); \r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"SearchBar\">\r\n                    <div className=\"SearchBar-sort-options\">\r\n                        <ul>\r\n                        {this.renderSortByOptions}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"SearchBar-fields\">\r\n                        <input placeholder=\"Search Businesses\" onChange = {this.handleTermChange}/>\r\n                        <input placeholder=\"Where?\" onChange = {this.handleLocationChange} />\r\n                    </div>\r\n                    <div className=\"SearchBar-submit\">\r\n                        <a onClick={this.handleSearch}>Let's Go</a>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    \r\n};\r\n\r\nexport default SearchBar;","const apiKey = 'JAFRxjafFRpWRVf_GUXp9ta2rvNQ1A7DQcQrlY8bkP6esmVz039zgnkF4a4sIyYBuMqJGiBzMmCEK8CQtK3cC_09eZGT9sDItOcm3xkoCZLzsue1yQewhOG1y430X3Yx';\r\nconst clientID = 'LMy47-H3yglgMmRUQVbnuA';\r\nconst Yelp = {\r\n    search(term, location, sortBy){\r\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers:{\r\n                Authorization:`Bearer ${apiKey}`\r\n            }\r\n        }).then( (response) => {\r\n            return response.json();\r\n        }).then( (jsonResponse) => {\r\n            if(jsonResponse.businesses){\r\n                return jsonResponse.businesses.map((business) => \r\n                {\r\n                    console.log(business);\r\n                    return{\r\n                        id: business.id,\r\n                        imageSrc: business.image_url,\r\n                        name: business.name,\r\n                        address: business.location.address1,\r\n                        city:business.location.city,\r\n                        state: business.state,\r\n                        zipCode: business.location.zip_code,\r\n                        category: business.categories[0].title,\r\n                        rating: business.rating,\r\n                        reviewCount: business.review_count\r\n                    }\r\n    \r\n                });\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default Yelp;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n//import modules\nimport Business from '../Business/Business';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\n//paste Business object\nimport { render } from 'react-dom';\nimport '../Business/Business.css';\n\n/*\n const business = {\n    imageSrc: 'https://content.codecademy.com/programs/react/ravenous/pizza.jpg',\n    name: 'MarginOtto Pizzeria',\n    address: '1010 Paddington Way',\n    city: 'Flavortown',\n    state: 'NY',\n    zipCode: '10101',\n    category: 'Italian',\n    rating: 4.5,\n    reviewCount: 90\n }\n\n\nconst a = [\n  business,\n  business,\n  business,\n  business,\n  business,\n  business\n]; */\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businesses: [],\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term,location,sortBy){\n    Yelp.search(term, location,sortBy).then(\n      (a) => {this.setState({businesses: a});}\n    );\n  }\n  render(){\n  return (\n        <div className=\"App\">\n          <h1>ravenous</h1>\n          <SearchBar searchYelp={this.searchYelp}/>\n          <BusinessList businesses={this.state.businesses}/>\n        </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}